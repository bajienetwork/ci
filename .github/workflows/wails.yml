# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Wails

on:
  workflow_dispatch:
    inputs:
      fetcher:
        description: '地址组'
        required: true
        default: 'kuainiao'
        type: string
      app_name:
        description: '应用的名称'
        required: true
        default: '快鸟加速'
        type: string
      package_name:
        description: '打包名称'
        required: true
        default: 'Kuainiao Boost'
        type: string
      app_icon:
        description: '应用图标的URL'
        required: false
        type: string

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: 'bajienetwork/desktop'
        token: ${{ secrets.PAT }}
        submodules: recursive

    - name: Replace names
      shell: bash
      env:
        PACKAGE_NAME: ${{ inputs.package_name }}
        APP_NAME: ${{ inputs.app_name }}
      run: |
        LAYOUT=wails.json
        cat "$LAYOUT" | sed "s/{{app name}}/$APP_NAME/" | sed "s/{{package name}}/$PACKAGE_NAME" > "$RUNNER_TEMP/$LAYOUT"
        rm "$LAYOUT"
        mv "$RUNNER_TEMP/$LAYOUT" "$LAYOUT"

    - name: Setup ImageMagick
      uses: mfinelli/setup-imagemagick@v5.0.1

    - name: Manipulate app icon
      working-directory: build
      if: ${{ inputs.app_icon != '' }}
      shell: bash
      env:
        APPICON_URL: ${{ inputs.app_icon }}
      run: |
        RESOURCE=$RUNNER_TEMP/appicon
        CROPPED=$RUNNER_TEMP/cropped.png
        curl "$APPICON_URL" > "$RESOURCE"
        magick "$RESOURCE" -resize 810x810 -matte iconmatte.png -compose DstIn -composite "$CROPPED"
        magick "$CROPPED" \( +clone -background black -shadow 39x30+0+0 \) +swap -background none -layers merge +repage -gravity center -extent 1024x1024 appicon.png

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

    - name: Set up NodeJS
      uses: actions/setup-node@v4.0.3

    - name: Set up pnpm
      run: npm i -g pnpm

    - name: Build macOS
      run: wails build
      if: matrix.os == 'macos-latest'

    - name: Build Windows
      run: |
        bash ./app/geoip/download.sh
        wails build -nsis
      shell: bash
      if: matrix.os == 'windows-latest'

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4.3.6
      with:
        name: ${{ matrix.os }}
        path: ./build/bin/*
