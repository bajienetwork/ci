name: Android CI

on:
  workflow_dispatch:
    inputs:
      fetcher:
        description: '要使用的OSS和管理网站获取器'
        required: true
        default: 'Feiniao'
        type: string
      app_name:
        description: '应用的名称'
        required: true
        default: '飞鸟加速'
        type: string
      app_icon:
        description: '应用图标的URL'
        required: false
        type: string

jobs:
  build:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'bajienetwork/mobile'
          token: ${{ secrets.PAT }}
          submodules: recursive

      - name: Replace default fetcher
        working-directory: app
        env:
          FETCHER_NAME: ${{ inputs.fetcher }}
        run: |
          LAYOUT=_layout.tsx
          cat "$LAYOUT" | sed 's/{{default fetcher}}/$FETCHER_NAME/' > "$RUNNER_TEMP/$LAYOUT"
          rm "$LAYOUT"
          mv "$RUNNER_TEMP/$LAYOUT" "$LAYOUT"

      - name: Replace app name
        working-directory: android/app/src/main/res/values
        env:
          APP_NAME: ${{ inputs.app_name }}
        run: |
          LAYOUT=strings.xml
          cat "$LAYOUT" | sed 's/{{app name}}/$APP_NAME/' > "$RUNNER_TEMP/$LAYOUT"
          rm "$LAYOUT"
          mv "$RUNNER_TEMP/$LAYOUT" "$LAYOUT"

      - name: Setup ImageMagick
        uses: mfinelli/setup-imagemagick@v5.0.1

      - name: Manipulate app icon
        if: ${{ inputs.app_icon != '' }}
        working-directory: android
        env:
          APPICON_URL: ${{ inputs.app_icon }}
        run: |
          RESOURCE=$RUNNER_TEMP/appicon
          curl "$APPICON_URL" > "$RESOURCE"
          magick "$RESOURCE" -resize 192x192 app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp
          magick "$RESOURCE" -resize 143x144 app/src/main/res/mipmap-xxhdpi/ic_launcher.webp
          magick "$RESOURCE" -resize 96x96 app/src/main/res/mipmap-xhdpi/ic_launcher.webp
          magick "$RESOURCE" -resize 72x72 app/src/main/res/mipmap-hdpi/ic_launcher.webp
          magick "$RESOURCE" -resize 48x48 app/src/main/res/mipmap-mdpi/ic_launcher.webp

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up NodeJS
        uses: actions/setup-node@v4.0.3
        with:
          cache: 'pnpm'

      - name: pnpm install
        run: pnpm install

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Grant execute permission for gradlew
        working-directory: android
        run: chmod +x gradlew

      - name: Build CMake
        working-directory: android
        run: ./gradlew buildCMakeDebug

      - name: Set up signing options
        working-directory: android
        env:
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: |
          cat << EOF > ./signing.properties
          keystore.password=$SIGNING_STORE_PASSWORD
          key.alias=$SIGNING_KEY_ALIAS
          key.password=$SIGNING_KEY_PASSWORD
          EOF

      - name: Place release key
        working-directory: android
        env:
          RELEASE_KEY: ${{ secrets.RELEASE_KEY }}
        run: echo $"RELEASE_KEY" | base64 -d > release.keystore

      - name: Build meta-alpha release
        working-directory: android
        run: ./gradlew :app:assembleMeta-alphaRelease

      - name: Upload artifacts
        uses: actions/upload-artifact@v4.3.6
        with:
          name: android-latest
          path: ./android/app/build/outputs/apk/meta-alpha/release/*
        
